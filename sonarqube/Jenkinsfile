node {
    def myGradleContainer = 'gradle:jdk8-alpine'
    sh "docker pull ${myGradleContainer}"

    stage('prep') {
        git url: 'https://github.com/RaoufAouani/jenkins'
    }

    stage('build') {
        sh "docker run --rm -v $PWD:/app -w /app ${myGradleContainer} /opt/gradle/bin/gradle build"
    }

    stage('wait-for-sonarqube') {
        sh 'until curl -s http://sonarqube:9000/api/system/status | grep -q "UP"; do sleep 10; done'
    }

    stage('sonar-scanner') {
        def sonarHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
        withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
            sh """
                ${sonarHome}/bin/sonar-scanner -e \
                -Dsonar.host.url=http://sonarqube:9000 \
                -Dsonar.login=${sonarLogin} \
                -Dsonar.projectName=gs-gradle \
                -Dsonar.projectVersion=${env.BUILD_NUMBER} \
                -Dsonar.projectKey=GS \
                -Dsonar.sources=complete/src/main/ \
                -Dsonar.tests=complete/src/test/ \
                -Dsonar.language=java \
                -Dsonar.java.binaries=.
            """
        }
    }

    stage('cleanup') {
        sh "docker stop \$(docker ps -q --filter ancestor=${myGradleContainer}) || true"
    }
}

